/*
 * Copyright 2018 Mark Scott
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.codebrewer.fr24feedprocessor.basestation.domain;

import java.util.Collections;
import java.util.EnumSet;
import java.util.Set;

/**
 * Utility methods related to the fr24feed application's BaseStation support.
 */
public class DomainUtils {
  // The subset of message types expected to be seen in the incoming message feed
  //
  private static final Set<MessageType> EXPECTED_MESSAGE_TYPES =
      Collections.unmodifiableSet(
          EnumSet.of(MessageType.AIR, MessageType.ID, MessageType.MSG, MessageType.STA));

  // The subset of status message types expected to be seen in the incoming message feed
  //
  private static final Set<StatusMessageType> EXPECTED_STATUS_MESSAGE_TYPES =
      Collections.unmodifiableSet(EnumSet.of(StatusMessageType.RM, StatusMessageType.SL));

  /**
   * Indicates whether or not a message of the given type is expected to be seen in the feed of
   * BaseStation messages generated by the {@code fr24feed} application.
   *
   * <p>{@code fr24feed} does not generate all message types defined by BaseStation.
   *
   * @param messageType a message type, null returns false
   *
   * @return whether or not the given message type is expected to be seen
   */
  public static boolean isExpectedMessageType(MessageType messageType) {
    return messageType != null && EXPECTED_MESSAGE_TYPES.contains(messageType);
  }

  /**
   * Indicates whether or not a status message of the given type is expected to be seen in the feed
   * of BaseStation messages generated by the {@code fr24feed} application.
   *
   * <p>{@code fr24feed} does not generate all status message types defined by BaseStation.
   *
   * @param statusMessageType a status message type, null returns false
   *
   * @return whether or not the given status message type is expected to be seen
   */
  public static boolean isExpectedStatusMessageType(StatusMessageType statusMessageType) {
    return statusMessageType != null && EXPECTED_STATUS_MESSAGE_TYPES.contains(statusMessageType);
  }

  private DomainUtils() {
    // Utility class
  }
}
